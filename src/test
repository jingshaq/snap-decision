PRAGMA synchronous = OFF;
PRAGMA journal_mode = WAL;

强制刷新
sqlite3_db_cacheflush(db);

 db.query("PRAGMA wal_checkpoint(FULL);", emptyArray())
 db.query("PRAGMA wal_checkpoint(TRUNCATE);", emptyArray())


https://discuss.zetetic.net/t/libcrypto-on-ios-and-simulator/140
./configure --enable-tempstore=yes --with-crypto-lib=commoncrypto CFLAGS="-DSQLITE_HAS_CODEC -DSQLITE_TEMP_STORE=2"
make sqlite3.c
exit 0

https://blog.ismisv.com/2019/04/sqlcipher-android-upgrade-memior/

https://kanchuan.com/blog/146-sqlite-sqlcipher


import Foundation
import libcurl

func curlTest() {
    // 初始化libcurl
    let handle = curl_easy_init()
    if handle != nil {
        // 设置URL
        curl_easy_setopt(handle, CURLOPT_URL, "https://www.bing.com")
        // 启用服务器证书验证
        curl_easy_setopt(handle, CURLOPT_SSL_VERIFYPEER, 1L)
        
        // 使用iOS系统自带的证书库
        curl_easy_setopt(handle, CURLOPT_SSL_CTX_FUNCTION, { (ctx, param) -> CURLcode in
            let status = SSL_CTX_set_default_verify_paths(ctx)
            return status == 1 ? CURLE_OK : CURLE_SSL_CERTPROBLEM
        })

        // 执行请求
        let res = curl_easy_perform(handle)
        // 检查结果
        if res != CURLE_OK {
            print("curl_easy_perform() failed: \(String(describing: curl_easy_strerror(res)))")
        } else {
            print("Success!")
        }
        // 清理
        curl_easy_cleanup(handle)
    }
}

curlTest()
